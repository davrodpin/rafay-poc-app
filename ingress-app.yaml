apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: aws-alb
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: canary-demo
  annotations:
    alb.ingress.kubernetes.io/actions.canary-deployment: >
      {"type":"forward","forwardConfig":{"targetGroups":[{"serviceName":"demo-app-coffee","servicePort":"http","weight":49},{"serviceName":"demo-app-tea","servicePort":"http","weight":51}],"targetGroupStickinessConfig":{"enabled":false,"durationSeconds":15}}}
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kuberentes.io/load-balancer-attributes: routing.http2.enabled=false
    alb.ingress.kubernetes.io/load-balancer-name: canary-demo
    alb.ingress.kubernetes.io/healthcheck-port: "80"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/scheme: internet-facing
   #alb.ingress.kubernetes.io/security-groups: sg-0a85c970ad19ef3f2
   #alb.ingress.kubernetes.io/subnets: subnet-09c1a231024b655bb, subnet-0fe263cf3c0eff5bb
    alb.ingress.kubernetes.io/tags: Project=Rafay
   #alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
spec:
  ingressClassName: "aws-alb"
  rules:
   #- host: canary.aws.rafay.us
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: canary-deployment
                port:
                  name: use-annotation
