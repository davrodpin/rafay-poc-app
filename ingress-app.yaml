apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: aws-alb
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: canary-demo
  annotations:
    alb.ingress.kubernetes.io/actions.canary-deployment: >
      {"type":"forward","forwardConfig":{"targetGroups":[{"serviceName":"demo-app-coffee","servicePort":"https","weight":100},{"serviceName":"demo-app-tea","servicePort":"https","weight":0}],"targetGroupStickinessConfig":{"enabled":false,"durationSeconds":15}}}
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kuberentes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/load-balancer-name: canary-demo
    alb.ingress.kubernetes.io/healthcheck-port: "443"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/scheme: internet-facing
    #alb.ingress.kubernetes.io/security-groups: sg-072160185130bfb27
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    #alb.ingress.kubernetes.io/subnets: subnet-0d8b9949151be9494, subnet-04d7976a8add94ca6
    alb.ingress.kubernetes.io/tags: Project=Rafay
    #alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
spec:
  ingressClassName: "aws-alb"
#  tls:
#    - hosts:
#        - canary.aws.rafay.us
  rules:
#    - host: canary.aws.rafay.us
    -  http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: canary-deployment
                port:
                  name: use-annotation
